{"ast":null,"code":"var _jsxFileName = \"/home/desktop/yankee_platoon/04-Front-End/day1/lessons/react_tutorial_tic_tac_toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  //creating the square, giving it a value, and giving it an onclick function\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: [\" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true); // Each time a player moves, xIsNext(current player move)\n  const [squares, setSquares] = useState(Array(9).fill(null)); // ['O', null, 'X', 'X', 'X', 'O', 'O', null, null]\n  function handleClick(i) {\n    //handle when click occurs\n    if (calculateWinner(squares) || squares[i]) {\n      //checks each square \n      return;\n    }\n    const nextSquares = squares.slice(); //to make copys of the board \n    if (xIsNext) {\n      //while your turn is true\n      nextSquares[i] = 'X'; //the next position will use 'x'\n    } else {\n      //while your turn is false\n      nextSquares[i] = 'O'; //the next position will use 'o'\n    }\n    setSquares(nextSquares); //sets next turn to x or o\n    setXIsNext(!xIsNext); //if false its 'O' turn, if true its 'X' turn\n  }\n  const winner = calculateWinner(squares); //\n  let status; //empty variable\n  if (winner) {\n    //If there is a winner\n    status = 'Winner: ' + winner; //Winner: X      or Winner: O \n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O'); //Next player will show whos turn it is based on the xIsNext variable defined earlier.\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n//The layout is\n//[0][1][2]\n//[3][4][5]\n//[6][7][8]\n_s(Board, \"coMecpjTzg1W7KUe5tSm+DrcByQ=\");\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2],\n  //across top row\n  [3, 4, 5],\n  //across mid row\n  [6, 7, 8],\n  //across bottom row\n  [0, 3, 6],\n  //down left column\n  [1, 4, 7],\n  //down middle column\n  [2, 5, 8],\n  //down right column\n  [0, 4, 8],\n  //diagonal, top left to bottom right\n  [2, 4, 6] //diagonal, top right, to bottom left\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    //   checks a is not null, and checks if a and b are same symbol, checks if a and c are same symbol\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null; // no winner so dont do anything\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","xIsNext","setXIsNext","squares","setSquares","Array","fill","handleClick","i","calculateWinner","nextSquares","slice","winner","status","_c2","lines","length","a","b","c","$RefreshReg$"],"sources":["/home/desktop/yankee_platoon/04-Front-End/day1/lessons/react_tutorial_tic_tac_toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({value, onSquareClick}) { //creating the square, giving it a value, and giving it an onclick function\n  return (\n    <button className=\"square\" onClick={onSquareClick}> {/* every square is a button */}\n      {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n  const [xIsNext, setXIsNext] = useState(true); // Each time a player moves, xIsNext(current player move)\n  const [squares, setSquares] = useState(Array(9).fill(null)); // ['O', null, 'X', 'X', 'X', 'O', 'O', null, null]\n  function handleClick(i) { //handle when click occurs\n    if (calculateWinner(squares) || squares[i]) { //checks each square \n      return;\n    }\n    const nextSquares = squares.slice(); //to make copys of the board \n    if (xIsNext) { //while your turn is true\n      nextSquares[i] = 'X'; //the next position will use 'x'\n    } else { //while your turn is false\n      nextSquares[i] = 'O'; //the next position will use 'o'\n    }\n    setSquares(nextSquares); //sets next turn to x or o\n    setXIsNext(!xIsNext); //if false its 'O' turn, if true its 'X' turn\n  }\n\n  const winner = calculateWinner(squares); //\n  let status; //empty variable\n  if (winner) { //If there is a winner\n    status = 'Winner: ' + winner; //Winner: X      or Winner: O \n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O'); //Next player will show whos turn it is based on the xIsNext variable defined earlier.\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {/*squares[indices]: [0    ,1    ,2   ,3   ,4   ,5   ,6    ,7   ,8]*/}\n                {/*squares: ['O', null, 'X', 'X', 'X', 'O', 'O', null, null]*/}\n                  {/* squares[box] onclick will run handleclick() above */}\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n//The layout is\n//[0][1][2]\n//[3][4][5]\n//[6][7][8]\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2], //across top row\n    [3, 4, 5], //across mid row\n    [6, 7, 8], //across bottom row\n    [0, 3, 6], //down left column\n    [1, 4, 7], //down middle column\n    [2, 5, 8], //down right column\n    [0, 4, 8], //diagonal, top left to bottom right\n    [2, 4, 6], //diagonal, top right, to bottom left\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]; \n    //   checks a is not null, and checks if a and b are same symbol, checks if a and c are same symbol\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null; // no winner so dont do anything\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}